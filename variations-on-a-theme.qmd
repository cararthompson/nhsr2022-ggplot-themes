---
title: "Variations on a ggplot theme"
subtitle: "Cara Thompson | NHS-R 2022 Conference | `r verbaliseR::prettify_date('2022-11-16', uk_or_us = 'UK')`"
from: markdown+emoji
format:
  revealjs: 
    transition: none
    slide-number: false
    auto-animate: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/light-logo.png
    theme: cararquarto.scss
    footer: |
        Slides and full code: [cararthompson.com/talks/nhsr2022-ggplot-themes](https://cararthompson.com/talks/nhsr2022-ggplot-themes)
filters:
 - code-visibility
 - lightbox
lightbox: auto
auto-animate: true
title-slide-attributes:
    data-background-image: "images/dark-background.png"
    data-background-size: stretch
    data-background-opacity: "1"
    data-background-color: black
---

# Intro {visibility=hidden}

## Hi there :wave: ! {transition="convex-in none-out"}


```{r setup}
knitr::opts_chunk$set(dev = "ragg_png")

systemfonts::register_font("BrandonText", plain = "C:/Windows/Fonts/BrandonText-Regular.ttf")
systemfonts::register_variant("EnriquetaSB", family = "Enriqueta", weight = "semibold")

library(tidyverse)

basic_plot <- ggplot(palmerpenguins::penguins %>%
                       filter(!is.na(flipper_length_mm)),
                     aes(x = island, y = flipper_length_mm)) +
  ggbeeswarm::geom_beeswarm(aes(fill = species,
                                size = body_mass_g),
                            shape = 21,
                            colour = "#FFFFFF",
                            alpha = 0.7) +
  colorblindr::scale_fill_OkabeIto() +
  guides(size = "none") +
  labs(title = "Only on Dream do penguins of different species share\nsimilar flipper lengths",
       subtitle = "Each column represents the penguin population of an island. Each dot is a penguin;
the larger the dot, the heavier the penguin. The Adelie penguins live on all three
islands. They share Biscoe with the longer-beflippered Gentoos, and Dream with 
the equally-beflippered Chinstraps.",
caption = "Data from {palmerpenguins}",
x = "Island",
y = "Flipper length", 
fill = "")

```


üë© Cara Thompson

::: {.fragment}
üë©‚Äçüíª Freelance data consultant specialising in dataviz and "enhanced" reproducible outputs
:::

::: {.fragment}
üíô Helping others maximise the impact of their expertise
:::

::: {.fragment}
üì¢ Three reasons why you should use a bespoke `ggplot` theme & how to create one
:::


## {auto-animate=true background=#2C3D4F}

<br>
<br>

::: fragment
### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers
:::
::: fragment
### <span style=color:#28A569>#2</span> - Give everything some space to breathe
:::
::: fragment
### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project 
:::

## {auto-animate=true background=#2C3D4F}

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers {.imitate-title}

### <span style=color:#28A569>#2</span> - Give everything some space to breathe

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

::: {.fragment}
![](https://public-images.interaction-design.org/literature/articles/materials/0B2CNUOVN6c9pyGDHu5152HWB4dbdevsDWj0QBNK.jpg){width=80%}
:::

::: footer
Find out more: [https://www.interaction-design.org/](https://www.interaction-design.org/literature/article/the-ux-designer-s-guide-to-typography)
:::


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

::: fragment
üì¶ = `{ggbeeswarm}` + `{palmerpenguins}` + üé®`{colorblindr}`
:::


```{r}
#| echo: true
#| output-location: column-fragment
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot

```



## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

A first easy tweak: `theme_minimal()`

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "2"
basic_plot +
  theme_minimal()

```


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Create and apply different text colours

```{r}
#| echo: true
#| output-location: column-fragment
#| results: hide
#| code-line-numbers: "1|3-8"

dark_text <- "#1A242F"

monochromeR::generate_palette(
  dark_text, 
  "go_lighter",
  n_colours = 5,
  view_palette = TRUE
)
```

::: fragment

```{r}
#| echo: true
#| code-line-numbers: "1-3"
mid_text <-  monochromeR::generate_palette(
  dark_text, "go_lighter",
  n_colours = 5)[2]

light_text <-  monochromeR::generate_palette(
  dark_text, "go_lighter",
  n_colours = 5)[3]

```

:::

## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Create and apply different text colours

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot +
  theme_minimal()

```


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Create and apply different text colours

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "2-5"
basic_plot +
  theme_minimal() +
  theme(
    text = element_text(colour = mid_text)
  )
```


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Create and apply different text colours

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "5"
basic_plot +
  theme_minimal() +
  theme(
    text = element_text(colour = mid_text),
    plot.title = element_text(colour = dark_text)
  )
```



## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Create and apply different text colours

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "6-7"
basic_plot +
  theme_minimal() +
  theme(
    text = element_text(colour = mid_text),
    plot.title = element_text(colour = dark_text),
    axis.text.x = element_text(colour = mid_text),
    axis.text.y = element_text(colour = light_text)
  )
```



## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Add your own fonts

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "5,7"
basic_plot +
  theme_minimal() +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB"),
    axis.text.x = element_text(colour = mid_text),
    axis.text.y = element_text(colour = light_text)
  )

```

::: footer
Find out more: [yjunechoe.github.io/posts/2021-06-24-setting-up-and-debugging-custom-fonts/](https://yjunechoe.github.io/posts/2021-06-24-setting-up-and-debugging-custom-fonts/)
:::


## <span style=color:#28A569>#1</span> - Add text hierarchy {auto-animate=true}

Change the text sizes (relative or absolute)

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "8-9,11,15|12,14"
basic_plot +
  theme_minimal() +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    plot.caption = element_text(size = rel(0.8))
  )

```

## <span style=color:#28A569>#1</span> - Add text hierarchy {background=#2C3D4F}

::: {.columns}

::: {.column width=50%}

```{r}
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot
```

:::

::: {.column width=50%}

```{r}
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot +
  theme_minimal(base_size = 12) +
  theme(text = element_text(colour = mid_text,
                            family = "BrandonText"),
        plot.title = element_text(colour = dark_text,
                                  family = "EnriquetaSB",
                                  size = rel(1.6)),
        plot.subtitle = element_text(size = rel(1.1)),
        axis.text.y = element_text(colour = light_text, 
                                   size = rel(0.8)),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(colour = mid_text,
                                   size = 12),
        plot.caption = element_text(size = rel(0.8)))

```
:::

:::

## {auto-animate=true background=#2C3D4F}

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers {.imitate-title}

### <span style=color:#28A569>#2</span> - Give everything some space to breathe

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project


# Part 2: Space to breathe {visibility=hidden}

## {auto-animate=true background=#2C3D4F}

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers {.faded-small}

### <span style=color:#28A569>#2</span> - Give everything some space to breathe {.imitate-title}

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project


## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

<br>

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    plot.caption = element_text(size = rel(0.8))
  )

```

## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Remove clutter: grid lines

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "15"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    panel.grid = element_line(colour = "#F3F4F5"),
    plot.caption = element_text(size = rel(0.8))
  )

```



## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Remove clutter: any unnecessary axis titles

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "15"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    plot.caption = element_text(size = rel(0.8))
  )

```


## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Reduce eye movements

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "17"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    plot.caption = element_text(size = rel(0.8))
  )

```



## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Reduce eye movements

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "18"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText"),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    legend.justification = 1,
    plot.caption = element_text(size = rel(0.8))
  )

```



## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Add breathing space - line height

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "6"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText", 
                        lineheight = 1.1),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6)),
    plot.subtitle = element_text(size = rel(1.1)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    legend.justification = 1,
    plot.caption = element_text(size = rel(0.8))
  )

```




## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Add breathing space - margins around text items (`TR`ou`BL`e)

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "10,12,16,24"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText",
                        lineheight = 1.1),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6),
                              margin = margin(12, 0, 8, 0)),
    plot.subtitle = element_text(size = rel(1.1),
                                 margin = margin(4, 0, 0, 0)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12,
                                margin = margin(0, 4, 0, 0)),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),  
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    legend.justification = 1,
    plot.caption = element_text(size = rel(0.8),
                                margin = margin(8, 0, 0, 0))
  )

```



## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Add breathing space - margins around the plot (`TR`ou`BL`e)


```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "25-27"
basic_plot +
  theme_minimal(base_size = 12) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText",
                        lineheight = 1.1),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6),
                              margin = margin(12, 0, 8, 0)),
    plot.subtitle = element_text(size = rel(1.1),
                                 margin = margin(4, 0, 0, 0)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12,
                                margin = margin(0, 4, 0, 0)),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    legend.justification = 1,
    plot.caption = element_text(size = rel(0.8),
                                margin = margin(8, 0, 0, 0)),
    plot.margin = margin(0.25, 0.25, 
                         0.25, 0.25,
                         "cm")
  )

```


## <span style=color:#28A569>#2</span> - Give everything some space to breathe {auto-animate=true}

Add breathing space - adjust text size (üôè `rel()`!)

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "2"
basic_plot +
  theme_minimal(base_size = 11) +
  theme(
    text = element_text(colour = mid_text,
                        family = "BrandonText",
                        lineheight = 1.1),
    plot.title = element_text(colour = dark_text,
                              family = "EnriquetaSB",
                              size = rel(1.6),
                              margin = margin(12, 0, 8, 0)),
    plot.subtitle = element_text(size = rel(1.1),
                                 margin = margin(4, 0, 0, 0)),
    axis.text.y = element_text(colour = light_text, 
                               size = rel(0.8)),
    axis.title.y = element_text(size = 12,
                                margin = margin(0, 4, 0, 0)),
    axis.text.x = element_text(colour = mid_text,
                               size = 12),
    axis.title.x = element_blank(),
    panel.grid = element_line(colour = "#F3F4F5"),
    legend.position = "top",
    legend.justification = 1,
    plot.caption = element_text(size = rel(0.8),
                                margin = margin(8, 0, 0, 0)),
    plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm")
  )

```


## <span style=color:#28A569>#2</span> - Give everything some space to breathe {background=#2C3D4F}

::: {.columns}

::: {.column width=50%}

```{r}
#| echo: false
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot +
  theme_minimal(base_size = 12) +
  theme(text = element_text(colour = mid_text,
                            family = "BrandonText"),
        plot.title = element_text(colour = dark_text,
                                  family = "EnriquetaSB",
                                  size = rel(1.6)),
        plot.subtitle = element_text(size = rel(1.1)),
        axis.text.y = element_text(colour = light_text, 
                                   size = rel(0.8)),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(colour = mid_text,
                                   size = 12),
        plot.caption = element_text(size = rel(0.8)))


```
:::


::: {.column width=50%}

```{r}
#| echo: false
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
basic_plot +
  theme_minimal(base_size = 11) +
  theme(text = element_text(colour = mid_text,
                            family = "BrandonText",
                            lineheight = 1.1),
        plot.title = element_text(colour = dark_text,
                                  family = "EnriquetaSB",
                                  size = rel(1.6),
                                  margin = margin(12, 0, 8, 0)),
        plot.subtitle = element_text(size = rel(1.1),
                                     margin = margin(4, 0, 0, 0)),
        axis.text.y = element_text(colour = light_text, 
                                   size = rel(0.8)),
        axis.title.y = element_text(size = 12,
                                    margin = margin(0, 4, 0, 0)),
        axis.text.x = element_text(colour = mid_text,
                                   size = 12),
        axis.title.x = element_blank(),
        legend.position = "top",
        legend.justification = 1,
        panel.grid = element_line(colour = "#F3F4F5"),
        plot.caption = element_text(size = rel(0.8),
                                    margin = margin(8, 0, 0, 0)),
        plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))

```

::: 

:::


## {auto-animate=true background=#2C3D4F}

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers {.faded-small}

### <span style=color:#28A569>#2</span> - Give everything some space to breathe {.imitate-title}

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project


# Part 2: Space to breathe {visibility=hidden}

## {auto-animate=true background=#2C3D4F}

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers {.faded-small}

### <span style=color:#28A569>#2</span> - Give everything some space to breathe {.faded-small}

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project {.imitate-title}


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

"Don't repeat yourself" principle

```{r}
#| echo: true
#| eval: false
plot + 
  theme_minimal(base_size = 12) +
  theme(text = element_text(colour = mid_text, family = "BrandonText", lineheight = 1.1),
        plot.title = element_text(colour = dark_text, family = "EnriquetaSB", size = rel(1.6), margin = margin(12, 0, 8, 0)),
        plot.subtitle = element_text(size = rel(1.1), margin = margin(4, 0, 0, 0)),
        axis.text.y = element_text(colour = light_text, size = rel(0.8)),
        axis.title.y = element_text(size = 12, margin = margin(0, 4, 0, 0)),
        axis.text.x = element_text(colour = mid_text, size = 12),
        axis.title.x = element_blank(),
        legend.position = "top",
        legend.justification = 1,
        panel.grid = element_line(colour = "#F3F4F5"),
        plot.caption = element_text(size = rel(0.8), margin = margin(8, 0, 0, 0)),
        plot.margin = margin(0.25, 0.25, 0.25, 0.25,"cm"))

```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

Package it up as a function

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "1,15|2"

theme_nhsr_demo <- function(base_size = 12) {
  theme_minimal(base_size = base_size) +
    theme(text = element_text(colour = mid_text, family = "BrandonText", lineheight = 1.1),
          plot.title = element_text(colour = dark_text, family = "EnriquetaSB", size = rel(1.6), margin = margin(12, 0, 8, 0)),
          plot.subtitle = element_text(size = rel(1.1), margin = margin(4, 0, 0, 0)),
          axis.text.y = element_text(colour = light_text, size = rel(0.8)),
          axis.title.y = element_text(size = 12, margin = margin(0, 4, 0, 0)),
          axis.text.x = element_text(colour = mid_text, size = 12),
          axis.title.x = element_blank(),
          legend.position = "top",
          legend.justification = 1,
          panel.grid = element_line(colour = "#F3F4F5"),
          plot.caption = element_text(size = rel(0.8), margin = margin(8, 0, 0, 0)),
          plot.margin = margin(0.25, 0.25, 0.25, 0.25,"cm"))
}

```

## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

Package it up as a function

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "2|4-5"

theme_nhsr_demo <- function(base_size = 12, 
                            dark_text = "#1A242F") {
  
  mid_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[2]
  light_text <-  monochromeR::generate_palette(dark_text, "go_lighter", n_colours = 5)[3]
  
  theme_minimal(base_size = base_size) +
    theme(text = element_text(colour = mid_text, family = "BrandonText", lineheight = 1.1),
          plot.title = element_text(colour = dark_text, family = "EnriquetaSB", size = rel(1.6), margin = margin(12, 0, 8, 0)),
          plot.subtitle = element_text(size = rel(1.1), margin = margin(4, 0, 0, 0)),
          axis.text.y = element_text(colour = light_text, size = rel(0.8)),
          axis.title.y = element_text(size = 12, margin = margin(0, 4, 0, 0)),
          axis.text.x = element_text(colour = mid_text, size = 12),
          axis.title.x = element_blank(),
          legend.position = "top",
          legend.justification = 1,
          panel.grid = element_line(colour = "#F3F4F5"),
          plot.caption = element_text(size = rel(0.8), margin = margin(8, 0, 0, 0)),
          plot.margin = margin(0.25, 0.25, 0.25, 0.25,"cm"))
}

```
::: fragment
` + ` or `%+replace% `?
:::

::: footer
Find out more: [ggplot2.tidyverse.org/reference/theme_get](https://ggplot2.tidyverse.org/reference/theme_get.html)
:::


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

Apply it to any plot you like! üì¶`{datasets}`

```{r}
mtcars_plot <- mtcars %>%
  ggplot(aes(x = cyl, y = disp,
             colour = as.character(am))) +
  geom_point(aes(size = mpg),
             shape = 15,
             alpha = 0.8) +
  scale_x_continuous(breaks = c(4, 6, 8)) +
  labs(title = "I don't know enough about cars...",
       subtitle = "But I know lots of people use this dataset!",
       caption = "Data from mtcars",
       colour = "am")
```

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
mtcars_plot

```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

Apply it to any plot you like! üì¶`{datasets}`

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "2"
mtcars_plot +
  theme_nhsr_demo()
```

## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

```{r}
#| echo: false
orange_plot <- Orange %>%
  mutate(label_hjust = rep(c(0.9, 0.7, 0.9, 0.8, 0.7), 7)) %>%
  ggplot(aes(x = age, y = circumference,
             colour = Tree)) +
  geomtextpath::geom_textline(aes(label = paste0("Tree #", Tree),
                                  hjust = label_hjust),
                              show.legend = FALSE,
                              size = 5,
                              family = "Enriqueta") +
  labs(title = "Five little orange trees growing at their own pace",
       subtitle = "As the time keeps ticking on, they're taking up more space\nWatching their great journey, one question comes to mind\nDo you think Tree number 4 will leave the others behind?",
       caption = "Data from Orange",
       y = "Circumference",
       x = "Age (in days)") 
```

üì¶ `{geomtextpath}`

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "7-8"
orange_plot
```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

üì¶ `{geomtextpath}`

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "7-8"
orange_plot +
  theme_nhsr_demo()
```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

There's still room for further modifications if you want to make them!

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "3-6"
orange_plot +
  theme_nhsr_demo() +
  theme(
    axis.title.x = element_text(
      margin = margin(8, 0, 0, 0))
  )
```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

There's still room for further modifications if you want to make them!

```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "4-6"
orange_plot +
  theme_nhsr_demo() +
  theme(
    axis.text.x = element_text(
      colour = light_text, 
      size = rel(0.8)),
    axis.title.x = element_text(margin = margin(8, 0, 0, 0))
  )
```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

There's still room for further modifications if you want to make them!

```{r}
#| echo: false
ToothGrowth_plot <- ToothGrowth %>%
  mutate(supplement = factor(case_when(supp == "VC" ~ "Vitamin C",
                                       supp == "OJ" ~ "Orange Juice"))) %>%
  ggplot() +
  geom_boxplot(aes(group = dose,
                   y = len,
                   alpha = dose, 
                   fill = supplement),
               show.legend = FALSE,
               colour = light_text) +
  facet_wrap( ~ supplement) +
  scale_fill_manual(values = list(`Orange Juice` = "#e3ad0a",
                                  `Vitamin C` = "#fd6a0d")) +
  labs(title = "The growth of the odontoblast of the incisor teeth as a\ncriterion of vitamin C intake of the guinea pig",
       subtitle = "Is that a win for Orange Juice? Looks like it to me!
       ",
       x = "Dose",
       y = "",
       caption = "Data from ToothGrowth")

```


```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
ToothGrowth_plot +
  theme_nhsr_demo() +
  theme(
    axis.text.x = element_text(colour = light_text, size = rel(0.8)),
    axis.title.x = element_text(margin = margin(8, 0, 0, 0))
  )
```


## <span style=color:#28A569>#3</span> - Create aesthetic consistency {auto-animate=true}

There's still room for further modifications if you want to make them!


```{r}
#| echo: true
#| output-location: column
#| results: hide
#| fig-width: 7.1
#| fig-height: 6.5
#| code-line-numbers: "6-7|4-5"
ToothGrowth_plot +
  theme_nhsr_demo() +
  theme(
    axis.text.x = element_text(colour = light_text, size = rel(0.8)),
    axis.title.x = element_text(margin = margin(8, 0, 0, 0)),
    strip.background = element_rect(fill = "#F3F4F5", color = "#FFFFFF"),
    strip.text = element_text(family = "Enriqueta", size = 14)
  )
```



## <span style=color:#28A569>#3</span> - Create aesthetic consistency

All in the interest of effortless consistency - [R for the Rest of Us](rfortherestofus.com/)

::: fragment
![](images/ivac_demo.png)
:::



## <span style=color:#28A569>#3</span> - Create aesthetic consistency

All in the interest of effortless consistency - Misc `+ theme_nhsr_demo()`

::: fragment
![](images/misc_demo.png)
:::


## {auto-animate=true background=#2C3D4F background-image=https://thumbs.gfycat.com/PerfumedDefinitiveChipmunk-size_restricted.gif}

<br>
<br>
<br>
<br>
<br>
<br>

### <span style=color:#28A569>#1</span> - Add text hierarchy to help orient your readers

### <span style=color:#28A569>#2</span> - Give everything some space to breathe

### <span style=color:#28A569>#3</span> - Effortlessly create aesthetic consistency throughout your data project


